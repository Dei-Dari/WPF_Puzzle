<Window x:Class="Puzzle_3.MenuPuzzle"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Puzzle_3"
        mc:Ignorable="d"
        Title="MenuPuzzle" MinHeight="500" MinWidth="1300" WindowStartupLocation="CenterScreen" Icon="menu_images/menu_icon.png">
    <Window.Resources>
        <!--<ControlTemplate x:Key="MenuButtonTemplate" TargetType="Button">
            <Grid>
                -->
        <!--https://docs.microsoft.com/ru-ru/dotnet/desktop/wpf/controls/how-to-create-apply-template?view=netdesktop-6.0-->
        <!--
                <Border>
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderThickness" Value="8"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>                    
                    <Rectangle>
                        -->
        <!--для отработки стиля в прямоугольник, с imageBrush button отдельно не работает-->
        <!--
                        <Rectangle.Fill>
                            <ImageBrush ImageSource="{Binding ImageSource}"/>
                        </Rectangle.Fill>
                    </Rectangle>
                </Border>
            </Grid>

        </ControlTemplate>-->
        <!--<Storyboard x:Key="Storyboard">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="button" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:01" Value="0,0,10,10"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>-->
    </Window.Resources>

    <Grid x:Name="Menu">
        <Grid.Background>
            <ImageBrush ImageSource="menu_images/menu_wood_texture.jpg"/>
        </Grid.Background>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Canvas x:Name="StartMenu" Grid.Column="1" Grid.ColumnSpan="3" Margin="50">
            <Image x:Name="StartPicture" Source="/menu_images/menu_6.png" VerticalAlignment="Center" HorizontalAlignment="Center" IsEnabled="False"/>
        </Canvas>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <!--<Button Template="{StaticResource MenuButtonTemplate}"  Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" Click="ButtonClickStart" Width="300" Height="85" Focusable="False">-->
            <Button x:Name="button" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" Click="ButtonClickStart" Width="300" Height="85" Focusable="False" Margin="0,0,0,0" BorderThickness="0" Padding="0" Cursor="Hand">
                <!--E:\Академия ШАГ\Семестр 2\WpfApp_Lesson_6\WpfApp_Lesson_6-->
                <Button.Template>
                    <!--свой стиль кнопки, чтобы убрать голубую подсветку, эффект наведения using border thickness-->
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!--https://docs.microsoft.com/ru-ru/dotnet/desktop/wpf/controls/how-to-create-apply-template?view=netdesktop-6.0-->
                            <Border>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <!--срабатывает на границе ??+-анимация уменьшения-->
                                                <!--<Setter Property="BorderThickness" Value="8"/>
                                                <Setter Property="Cursor" Value="Hand"/>-->
                                                <!--https://docs.microsoft.com/ru-ru/dotnet/desktop/wpf/graphics-multimedia/how-to-trigger-an-animation-when-a-property-value-changes?view=netframeworkdesktop-4.8-->
                                                <!--Blend для Microsoft Visual Studio Enterprise 2019-->
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness">
                                                                <EasingThicknessKeyFrame KeyTime="00:00:0.01" Value="5"/>
                                                            </ThicknessAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>                                                
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <!--уменьшение эффекта залипания при наведении на границу кнопки-->
                                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness">
                                                                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="0"/>
                                                            </ThicknessAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Rectangle>
                                    <!--для отработки стиля в прямоугольник, с imageBrush button отдельно не работает-->
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="menu_images/menu_start.png"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Button.Template>


                <!--<Button.Background>
                    <ImageBrush ImageSource="/menu_start.png"/>
                </Button.Background>-->
                <!--<Image Source="/menu_start.png">
                    
                </Image>-->
            </Button>
            <Button Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Click="ButtonClickGameControls" Width="300" Height="55" Focusable="False" Cursor="Hand">
                <!--E:\Академия ШАГ\Семестр 2\WpfApp_Lesson_6\WpfApp_Lesson_6-->
                <Button.Template >
                    <!--свой стиль кнопки, чтобы убрать голубую подсветку, эффект наведения using border thickness-->
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!--https://docs.microsoft.com/ru-ru/dotnet/desktop/wpf/controls/how-to-create-apply-template?view=netdesktop-6.0-->
                            <Border>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <!--<Setter Property="BorderThickness" Value="8"/>-->
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness">
                                                                <EasingThicknessKeyFrame KeyTime="00:00:0.01" Value="5"/>
                                                            </ThicknessAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <!--убрать эффект залипания при наведении на границу кнопки-->
                                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness">
                                                                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="0"/>
                                                            </ThicknessAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Rectangle>
                                    <!--для отработки стиля в прямоугольник, с imageBrush button отдельно не работает-->
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="menu_images/menu_control.png"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                        </Grid>

                    </ControlTemplate>
                </Button.Template>

                <!--<Button.Background>
                    <ImageBrush ImageSource="/menu_start.png"/>
                </Button.Background>-->
                <!--<Image Source="/menu_start.png">
                    
                </Image>-->
            </Button>
            <Button Grid.Column="0" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Click="ButtonClickPicture" Width="300" Height="55" Focusable="False" Cursor="Hand">
                <!--E:\Академия ШАГ\Семестр 2\WpfApp_Lesson_6\WpfApp_Lesson_6-->
                <Button.Template >
                    <!--свой стиль кнопки, чтобы убрать голубую подсветку, эффект наведения using border thickness-->
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!--https://docs.microsoft.com/ru-ru/dotnet/desktop/wpf/controls/how-to-create-apply-template?view=netdesktop-6.0-->
                            <Border>
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <!--<Setter Property="BorderThickness" Value="8"/>-->
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness">
                                                                <EasingThicknessKeyFrame KeyTime="00:00:0.01" Value="5"/>
                                                            </ThicknessAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <!--убрать эффект залипания при наведении на границу кнопки-->
                                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness">
                                                                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="0"/>
                                                            </ThicknessAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Rectangle>
                                    <!--для отработки стиля в прямоугольник, с imageBrush button отдельно не работает-->
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="menu_images/menu_picture.png"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                        </Grid>

                    </ControlTemplate>
                </Button.Template>

                <!--<Button.Background>
                    <ImageBrush ImageSource="/menu_start.png"/>
                </Button.Background>-->
                <!--<Image Source="/menu_start.png">
                    
                </Image>-->
            </Button>
        </Grid>

        <!--<Button Content="управление" HorizontalAlignment="Left" Margin="132,191,0,0" VerticalAlignment="Top" Click="ButtonClickGameControls"/>-->
        <!--<Button Content="изображение" HorizontalAlignment="Left" Margin="116,265,0,0" VerticalAlignment="Top" Click="ButtonClickPicture"/>-->

    </Grid>
</Window>
